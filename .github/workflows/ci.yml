#
# https://docs.github.com/en/actions
# https://github.com/actions
#

name: CI

on:
  pull_request: {}
  push: {}

jobs:

  lint:
    name: "Lint - Ubuntu ${{matrix.pick.OS}} / Python ${{matrix.pick.PY}}"
    runs-on: ubuntu-${{matrix.pick.OS}}
    strategy:
      matrix:
        pick:
          - {OS: "20.04", PY: "3.10", TOXENV: "lint,docs"}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Setup Python ${{matrix.pick.PY}}"
        uses: actions/setup-python@v4
        with:
          python-version: ${{matrix.pick.PY}}

      - name: "Install tox"
        run: |
          python -m pip install tox wheel

      - name: "Run tox - ${{matrix.pick.TOXENV}}"
        env:
          TOXENV: ${{matrix.pick.TOXENV}}
        run: |
          python -m tox -r -- --color=yes

  linux:
    name: "Test - Ubuntu ${{matrix.pick.OS}} / ${{matrix.pick.PYNAME}}"
    runs-on: ubuntu-${{matrix.pick.OS}}
    strategy:
      matrix:
        pick:
          - {OS: "18.04", PY: "pypy3", PYNAME: "PyPy3", TOXENV: "pypy3"}
          - {OS: "18.04", PY: "3.6", PYNAME: "Python 3.6", TOXENV: "py36-pycryptodome"}
          - {OS: "18.04", PY: "3.7", PYNAME: "Python 3.7", TOXENV: "py37-cryptography"}
          - {OS: "20.04", PY: "3.8", PYNAME: "Python 3.8", TOXENV: "py38-cryptography"}
          - {OS: "20.04", PY: "3.9", PYNAME: "Python 3.9", TOXENV: "py39"}
          - {OS: "20.04", PY: "3.10", PYNAME: "Python 3.10", TOXENV: "py310"}
          - {OS: "22.04", PY: "3.11-dev", PYNAME: "Python 3.11", TOXENV: "py311"}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Setup ${{matrix.pick.PYNAME}}"
        uses: actions/setup-python@v4
        with:
          python-version: ${{matrix.pick.PY}}

      - name: "Install archivers"
        run: sudo -nH apt-get -qqy install unrar unar libarchive-tools

      - name: "Install tox"
        run: |
          python --version
          python -m pip install tox wheel

      - name: "Run tox - ${{matrix.pick.TOXENV}}"
        env:
          TOXENV: ${{matrix.pick.TOXENV}}
        run: |
          python -m tox -r -- --color=yes -n auto

  macos:
    name: "Test - MacOS ${{matrix.pick.OS}} / Python ${{matrix.pick.PY}}"
    runs-on: macos-${{matrix.pick.OS}}
    strategy:
      matrix:
        pick:
          - {OS: "10.15", PY: "3.8", TOXENV: "py38-cryptography", DL_UNRAR: false, DL_UNAR: false}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Setup Python ${{matrix.pick.PY}}"
        uses: actions/setup-python@v4
        with:
          python-version: ${{matrix.pick.PY}}

      - name: "Install archivers"
        run: |
          brew install unrar unar libarchive
          mkdir -p bin
          echo "${GITHUB_WORKSPACE}/bin" >> $GITHUB_PATH

      - name: "Download unrar"
        if: matrix.pick.DL_UNRAR
        run: |
          curl -sS -o "rarosx.tgz" "https://www.rarlab.com/rar/rarosx-5.9.1.tar.gz"
          tar xvf "rarosx.tgz" "rar/unrar"

      - name: "Download unar"
        if: matrix.pick.DL_UNAR
        run: |
          curl -sS -o "unarMac.zip" "https://cdn.theunarchiver.com/downloads/unarMac.zip"
          unzip "unarMac.zip" "unar"
          install -m 755 unar ./bin/
          rm unar

      - name: "Install tox"
        run: |
          python -m pip install tox wheel

      - name: "Run tox - ${{matrix.pick.TOXENV}}"
        env:
          TOXENV: ${{matrix.pick.TOXENV}}
        run: |
          python -m tox -r -- --color=yes -n auto

  windows:
    name: "Test - Windows ${{matrix.pick.OS}} / Python ${{matrix.pick.PY}}"
    runs-on: windows-${{matrix.pick.OS}}
    strategy:
      matrix:
        pick:
          - {OS: "2016", PY: "3.6", TOXENV: "py36", DL_UNRAR: false, DL_UNAR: false}
          - {OS: "2019", PY: "3.8", TOXENV: "py38-cryptography", DL_UNRAR: false, DL_UNAR: false}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Setup Python ${{matrix.pick.PY}}"
        uses: actions/setup-python@v4
        with:
          python-version: ${{matrix.pick.PY}}

      - name: "Install unrar, bsdtar"
        shell: cmd
        run: |
          set "PATH=c:\msys64\usr\bin;%PATH%"
          pacman -S --noconfirm --needed unrar bsdtar

      - name: "Download unrar"
        if: matrix.pick.DL_UNRAR
        shell: bash
        run: |
          curl -sS -o "unrarw32.exe" "https://www.rarlab.com/rar/unrarw32.exe"
          7z x "unrarw32.exe"
          echo "${GITHUB_WORKSPACE}\\rar" >> $GITHUB_PATH

      # need at least unar >= 1.10
      - name: "Download unar"
        if: matrix.pick.DL_UNAR
        shell: bash
        run: |
          curl -sS -o "unarWindows.zip" "https://cdn.theunarchiver.com/downloads/unarWindows.zip"
          unzip -q -d unar "unarWindows.zip"
          echo "${GITHUB_WORKSPACE}\\unar" >> $GITHUB_PATH

      - name: "Install tox"
        shell: cmd
        run: |
          python -m pip install tox wheel

      - name: "Run tox - ${{matrix.pick.TOXENV}}"
        shell: cmd
        env:
          TOXENV: ${{matrix.pick.TOXENV}}
        run: |
          set "PATH=%PATH%;c:\msys64\usr\bin"
          python -m tox -r -- --color=yes -n auto

